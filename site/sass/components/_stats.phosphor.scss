// Stats component styling

.stats {
  $self: &;
  $circle-l: 65;
  $circle-s: 42.5;

  &__header,
  &__subtitle {
    margin: 0 auto;
  }

  &__header {
    max-width: 40rem;
    text-align: center;
  }

  &__subtitle {
    color: var(--grey-700);
    margin-top: 1rem;
    max-width: 25rem;

    @supports (margin-top: clamp(1px, 1vw, 2px)) {
      margin-top: clamp(0.625rem, 2.66vw, 1rem);
    }
  }

  &__list {
    display: flex;
    flex-wrap: wrap;
    gap: pxRem(70px) 1.25rem;
    justify-content: space-evenly;
    list-style: none;
    padding: 0;

    #{$self}--header & {
      margin-top: 5rem;
    }
  }

  &__item {
    align-items: center;
    display: flex;
    flex: 1 0 20ch;
    flex-direction: column;
    justify-content: center;
    justify-self: center;
    max-width: pxRem(468px);
    text-align: center;

    #{$self}--renderer & {
      margin-top: 1em;
    }
  }

  &__stat,
  &__desc {
    max-width: pxRem(306px);
  }

  &__stat {
    @include flexFont((48px 62.4px), (60px 68.7px), (80px 91.6px), 500);
    color: var(--grey-50);
    font-family: $font-mono;
    letter-spacing: -0.01em;
    margin-bottom: pxRem(26px);
    position: relative;
    text-align: center;
    text-shadow: 1px 1px var(--blue-850), -1px -1px var(--blue-850), 1px -1px var(--blue-850), -1px 1px var(--blue-850);

    &::after {
      content: '';
      display: block;
      left: 0;
      position: absolute;
      z-index: -1;
    }

    &--semicircle::after {
      --shape-color: var(--primary-yellow);
      #{'--circle-radius'}: $circle-l;
      #{'--circle-offset'}: $circle-l;
      background-image: paint(circles);
      height: pxRem($circle-l * 1px);
      top: 100%;
      transform: translate(-50%, -0%) rotate(210deg);
      transform-origin: top center;
      width: pxRem($circle-l * 2px);
    }

    &--circle::after {
      --shape-color: var(--primary-blue);
      #{'--circle-radius'}: $circle-s;
      #{'--circle-offset'}: $circle-s;
      background-image: paint(circles);
      bottom: 0;
      height: pxRem($circle-s * 2px);
      transform: translateX(-50%);
      width: pxRem($circle-s * 2px);
    }

    &--triangle::after {
      $size: 6.25rem;
      --shape-color: var(--primary-green);
      background-image: linear-gradient(to bottom left, var(--shape-color), var(--shape-color) 50%, transparent 50%, transparent);
      height: $size;
      top: 0;
      transform: translate(-50%, -25%) rotate(-15deg);
      transform-origin: bottom right;
      width: $size;
    }

    // Scale the left values down as screen size increases, if supported.
    &--scale-full::after {
      @supports (left: clamp(1px, 1vw, 2px)) {
        left: clamp(0rem, 20rem - 55vw, 90%);
      }
    }

    &--scale-half::after {
      @supports (left: clamp(1px, 1vw, 2px)) {
        left: clamp(0rem, 14.5rem - 32vw, 45%);
      }
    }
  }

  &__desc {
    color: var(--grey-750);
    flex-grow: 1;

    &.stats__desc--renderer {
      margin-top: 0;
    }
  }
}

.validation-card {
  $transparency: rgba(255, 255, 255, 0.001);
  $column: 0 724px;
  $scale-range: 375px 725px;
  $circle-l: 65;
  $circle-s: 42.5;

  justify-self: center;
  max-width: pxRem(306px);
  text-align: center;

  &__dt {
    --shape-color: var(--black);
    @include flexFont((48px 62.4px), (60px 68.7px), (80px 91.6px), 500);
    color: var(--grey-1000);
    display: inline-block;
    font-family: $font-google-sans;
    letter-spacing: -0.01em;
    margin-bottom: pxRem(26px);
    position: relative;
    text-align: center;

    &::after {
      content: '';
      display: block;
      left: 0;
      position: absolute;
      z-index: -1;
    }
  }

  &__dd {
    color: var(--grey-750);
  }

  &--yellow & {
    &__dt::after {
      --shape-color: var(--primary-yellow);
    }
  }

  &--blue & {
    &__dt {
      --shape-color: var(--primary-blue);
    }
  }

  &--green & {
    &__dt {
      --shape-color: var(--primary-green);
    }
  }

  &--red & {
    &__dt {
      --shape-color: var(--primary-red);
    }
  }

  &--semicircle & {
    &__dt::after {
      #{'--circle-radius'}: $circle-l;
      #{'--circle-offset'}: $circle-l;
      background-image: paint(circles);
      height: pxRem($circle-l * 1px);
      top: 100%;
      transform: translate(-50%, -0%) rotate(210deg);
      transform-origin: top center;
      width: pxRem($circle-l * 2px);
    }
  }

  &--circle & {
    &__dt::after {
      #{'--circle-radius'}: $circle-s;
      #{'--circle-offset'}: $circle-s;
      background-image: paint(circles);
      bottom: 0;
      height: pxRem($circle-s * 2px);
      transform: translateX(-50%);
      width: pxRem($circle-s * 2px);
    }
  }

  &--triangle & {
    &__dt::after {
      $size: 6.25rem;
      background-image: linear-gradient(to bottom left, var(--shape-color), var(--shape-color) 50%, $transparency 50%, $transparency);
      height: $size;
      top: 0;
      transform: translate(-50%, -25%) rotate(-15deg);
      transform-origin: bottom right;
      width: $size;
    }
  }

  // Scale the left values down to zero as screen size increases, if supported.
  &--scale-full & {
    &__dt::after {
      @supports (left: clamp(1px, 1vw, 2px)) {
        left: clamp(0rem, 20rem - 44vw, 90%);
      }
    }
  }

  &--scale-half & {
    &__dt::after {
      @supports (left: clamp(1px, 1vw, 2px)) {
        left: clamp(0rem, 14.5rem - 32vw, 45%);
      }
    }
  }
}

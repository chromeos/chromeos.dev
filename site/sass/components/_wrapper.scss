// Styles for landing pages.
//
// Customizations.
// On wider screens (width > $content-max-width) if you have a component with a
// full-bleed background use --alter-background-color to set it.

@use 'sass:math';

.wrapper {
  $content-max-width: pxRem(1440px);

  $max-width: 1024px;
  $scaler: math.div(math.div($max-width, 100), 1vw);

  $block-spacing-s: 5.75rem;
  $block-spacing-l: 7.5rem;
  $inline-spacing-s: 3.75rem;
  $inline-spacing-l: 5rem;

  $bumper-s: 0.875rem;
  $bumper-l: 1.25rem;

  $block-spacing-m: math.div(($block-spacing-l + $block-spacing-s), 2);
  $inline-spacing-m: math.div(($inline-spacing-l + $inline-spacing-s), 2);
  $bumper-m: math.div(($bumper-l + $bumper-s), 2);

  $this: #{&};

  $block-spacing-r: clamp($block-spacing-s, (math.div($block-spacing-l, 1rem) * math.div(16px, $scaler)), $block-spacing-l);
  $inline-spacing-r: clamp($inline-spacing-s, (math.div($inline-spacing-l, 1rem) * math.div(16px, $scaler)), $inline-spacing-l);
  $bumper-r: clamp($bumper-s, (math.div($bumper-l, 1rem) * math.div(16px, $scaler)), $bumper-l);

  height: auto;
  margin: math.div($block-spacing-m, 2) auto;
  max-width: $content-max-width;

  @supports (margin: clamp(1px, 1vw, 2px)) {
    margin: calc(#{$block-spacing-r} / 2) auto;
  }

  &--padding {
    margin-bottom: 0;
    margin-top: 0;
    padding-bottom: math.div($block-spacing-m, 2);
    padding-top: math.div($block-spacing-m, 2);

    @supports (padding: clamp(1px, 1vw, 2px)) {
      padding-bottom: calc(#{$block-spacing-r} / 2);
      padding-top: calc(#{$block-spacing-r} / 2);
    }
  }

  &--padded {
    padding-left: $inline-spacing-m;
    padding-right: $inline-spacing-m;

    @supports (margin: clamp(1px, 1vw, 2px)) {
      padding-left: $inline-spacing-r;
      padding-right: $inline-spacing-r;
    }
  }

  &__contained > * {
    margin: 0 auto;
    max-width: $content-max-width;
  }

  &--rhythm > *:not(:last-child) {
    margin-bottom: $block-spacing-m;

    @supports (margin: clamp(1px, 1vw, 2px)) {
      margin-bottom: $block-spacing-r;
    }
  }

  &--full-top {
    margin-top: $block-spacing-m;

    @supports (margin: clamp(1px, 1vw, 2px)) {
      margin-top: $block-spacing-r;
    }

    &#{$this}--padding {
      margin-top: 0;
      padding-top: $block-spacing-m;

      @supports (padding: clamp(1px, 1vw, 2px)) {
        margin-top: 0;
        padding-top: $block-spacing-r;
      }
    }
  }

  &--full-bottom {
    margin-bottom: $block-spacing-m;

    @supports (margin: clamp(1px, 1vw, 2px)) {
      margin-bottom: $block-spacing-r;
    }

    &#{$this}--padding {
      margin-bottom: 0;
      padding-bottom: $block-spacing-m;

      @supports (padding: clamp(1px, 1vw, 2px)) {
        margin-bottom: 0;
        padding-bottom: $block-spacing-r;
      }
    }
  }

  &--bumper-top {
    margin-top: $bumper-m + math.div($block-spacing-m, 2);

    @supports (margin: clamp(1px, 1vw, 2px)) {
      margin-top: calc(#{$bumper-r} + #{$block-spacing-r} / 2);
    }

    &#{$this}--padding {
      margin-top: 0;
      padding-top: $bumper-m + math.div($block-spacing-m, 2);

      @supports (padding: clamp(1px, 1vw, 2px)) {
        margin-top: 0;
        padding-top: calc(#{$bumper-r} + #{$block-spacing-r} / 2);
      }
    }
  }

  &--bumper-bottom {
    margin-bottom: $bumper-m + math.div($block-spacing-m, 2);

    @supports (margin: clamp(1px, 1vw, 2px)) {
      margin-bottom: calc(#{$bumper-r} + #{$block-spacing-r} / 2);
    }

    &#{$this}--padding {
      margin-bottom: 0;
      padding-bottom: $bumper-m + math.div($block-spacing-m, 2);

      @supports (padding: clamp(1px, 1vw, 2px)) {
        margin-bottom: 0;
        padding-bottom: calc(#{$bumper-r} + #{$block-spacing-r} / 2);
      }
    }
  }

  &--no-bottom {
    margin-bottom: 0;

    &#{$this}--padding {
      padding-bottom: 0;
    }
  }

  &--no-top {
    margin-top: 0;

    &#{$this}--padding {
      padding-top: 0;
    }
  }

  &--no-spacing {
    margin-bottom: 0;
    margin-top: 0;

    &#{$this}--padding {
      padding-bottom: 0;
      padding-top: 0;
    }
  }

  &--full-bleed {
    max-width: 100%;
  }

  &--hidden-x {
    overflow-x: hidden;
  }

  &__background {
    background-color: var(--grey-50);
    overflow: hidden;

    .cta--link {
      color: var(--blue-700);

      &:visited {
        color: var(--purple-900);
      }

      &:hover,
      &:focus {
        color: var(--blue-900);
      }
    }
  }

  &__responsive-circle {
    $circle-s: 100px;
    $circle-l: 150px;
    $circle-m: math.div(($circle-l + $circle-s), 2);

    $medium: math.div($circle-m, (math.div(math.div($circle-l, $scaler), 100vw)));

    --circle-radius: #{$circle-s};
    --circle-offset: -50;

    @include mq($medium) {
      --circle-radius: #{$circle-m};
    }

    @include mq($max-width) {
      --circle-radius: #{$circle-l};
      --circle-offset: 0;
    }
  }

  &__green-circle {
    --shape-color: var(--green-500);
  }

  &__yellow-circle {
    --shape-color: var(--yellow-500);
  }

  &--full-circles {
    --circle-type: full-circles;
    --shape-color: var(--blue-600), var(--yellow-500);
    background-image: paint(circles);
    height: 100%;
  }
}
